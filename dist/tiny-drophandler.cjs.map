{"version":3,"file":"tiny-drophandler.cjs","sources":["../src/index.ts"],"sourcesContent":["export type DropFileEntry = {\n  fullPath: string;\n  file: File;\n};\nexport type AttachDropHandlerOptions = {\n  target?: HTMLElement;\n  onDrop: (files: DropFileEntry[]) => void;\n  onDragOver?: (event: DragEvent) => void;\n  onDragLeave?: (event: DragEvent) => void;\n};\n\nconst standardAPIAvailable = \"getAsEntry\" in DataTransferItem.prototype;\n\nasync function handleEntry(\n  entry: FileSystemEntry,\n  files: { [key: string]: File }\n): Promise<void> {\n  const fullPath = entry.fullPath.slice(1);\n  if (entry.isFile) {\n    const file = await new Promise<File>((resolve) => {\n      (entry as FileSystemFileEntry).file(resolve);\n    });\n    files[fullPath] = file;\n  } else if (entry.isDirectory) {\n    delete files[fullPath];\n    const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n    let entries: FileSystemEntry[];\n    do {\n      entries = await new Promise((resolve, reject) => {\n        dirReader.readEntries((entries) => resolve(entries), reject);\n      });\n      for (const entry of entries) {\n        await handleEntry(entry, files);\n      }\n    } while (entries.length > 0);\n  }\n}\n\nexport const attachDropHandler = ({\n  target = document.documentElement,\n  onDrop,\n  onDragOver,\n  onDragLeave,\n}: AttachDropHandlerOptions) => {\n  const handleDragOver = (e: DragEvent) => {\n    e.preventDefault();\n    onDragOver && onDragOver(e);\n  };\n  const handleDragLeave = (e: DragEvent) => {\n    onDragLeave && onDragLeave(e);\n  };\n  const handleDrop = async (e: DragEvent) => {\n    e.preventDefault();\n    onDragLeave && onDragLeave(e);\n    if (!e.dataTransfer) return;\n\n    const items = e.dataTransfer.items;\n    let files: { [key: string]: File } = Object.fromEntries(\n      Array.from(e.dataTransfer.files).map((file) => [file.name, file])\n    );\n\n    try {\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        if (item.kind === \"file\") {\n          const entry =\n            //@ts-ignore\n            item[standardAPIAvailable ? \"getAsEntry\" : \"webkitGetAsEntry\"](); // Use webkitGetAsEntry for directory support\n          if (entry && !entry.isFile) await handleEntry(entry, files);\n        }\n      }\n    } catch (e) {\n      console.warn(e);\n    }\n    const result = Object.entries(files).map(([fullPath, file]) => ({\n      file,\n      fullPath,\n    }));\n    result.length !== 0 && onDrop(result);\n  };\n  target.addEventListener(\"dragover\", handleDragOver);\n  target.addEventListener(\"dragleave\", handleDragLeave);\n  target.addEventListener(\"drop\", handleDrop);\n  return () => {\n    target.removeEventListener(\"dragover\", handleDragOver);\n    target.removeEventListener(\"dragleave\", handleDragLeave);\n    target.removeEventListener(\"drop\", handleDrop);\n  };\n};\n"],"names":["standardAPIAvailable","DataTransferItem","prototype","handleEntry","entry","files","fullPath","slice","isFile","file","Promise","resolve","isDirectory","dirReader","createReader","entries","reject","readEntries","length","attachDropHandler","target","document","documentElement","onDrop","onDragOver","onDragLeave","handleDragOver","e","preventDefault","handleDragLeave","handleDrop","dataTransfer","items","Object","fromEntries","Array","from","map","name","i","item","kind","console","warn","result","addEventListener","removeEventListener"],"mappings":"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"}